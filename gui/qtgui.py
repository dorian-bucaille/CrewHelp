# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'qtgui.ui'
#
# Created by: PyQt5 UI code generator 5.15.2
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtCore import pyqtSignal
from PyQt5.QtGui import QIcon


class Ui_MainWindow(object):

    start = pyqtSignal()


    def setupUi(self, MainWindow):

        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(500, 500)
        MainWindow.setMinimumSize(QtCore.QSize(500, 500))
        MainWindow.setMaximumSize(QtCore.QSize(500, 500))
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.logo = QtWidgets.QLabel(self.centralwidget)
        self.logo.setGeometry(QtCore.QRect(87, 0, 325, 325))
        self.logo.setText("")
        self.logo.setPixmap(QtGui.QPixmap("../gui/img/icon.png"))
        self.logo.setObjectName("logo")
        self.background = QtWidgets.QLabel(self.centralwidget)
        self.background.setGeometry(QtCore.QRect(0, 0, 500, 500))
        self.background.setText("")
        self.background.setPixmap(QtGui.QPixmap("../gui/img/guibackground.png"))
        self.background.setObjectName("background")
        self.logo_text = QtWidgets.QLabel(self.centralwidget)
        self.logo_text.setGeometry(QtCore.QRect(145, 335, 209, 79))
        self.logo_text.setText("")
        self.logo_text.setPixmap(QtGui.QPixmap("../gui/img/crewhelp.png"))
        self.logo_text.setObjectName("logo_text")
        self.speaker = QtWidgets.QLabel(self.centralwidget)
        self.speaker.setGeometry(QtCore.QRect(15, 15, 54, 53))
        self.speaker.setText("")
        self.speaker.setPixmap(QtGui.QPixmap("../gui/img/speakeron.png"))
        self.speaker.setObjectName("speaker")
        self.start_button = QtWidgets.QPushButton(self.centralwidget)
        self.start_button.setGeometry(QtCore.QRect(40, 431, 97, 48))
        self.start_button.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.start_button.setStyleSheet("#start_button​ {\n"
                                        "background-color: transparent;\n"
                                        "border-image: url(:../gui/img/start.png);\n"
                                        "background: none;\n"
                                        "border: none;\n"
                                        "background-repeat: none;\n"
                                        "}\n"
                                        "#upLeft​:pressed\n"
                                        "{\n"
                                        "   border-image: url(:../gui/img/started.png);\n"
                                        "}")
        self.start_button.setObjectName("start_button")
        self.start_button.clicked.connect(self.start_clicked)
        self.speaker_button = QtWidgets.QPushButton(self.centralwidget)
        self.speaker_button.clicked.connect(self.speaker_clicked)
        self.speaker_button.setGeometry(QtCore.QRect(15, 15, 54, 53))
        self.speaker_button.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.speaker_button.setStyleSheet("#start_button​ {\n"
                                          "background-color: transparent;\n"
                                          "border-image: url(:../gui/img/speaker.png);\n"
                                          "background: none;\n"
                                          "border: none;\n"
                                          "background-repeat: none;\n"
                                          "}")
        self.speaker_button.setObjectName("speaker_button")
        self.stop_button = QtWidgets.QPushButton(self.centralwidget)
        self.stop_button.clicked.connect(self.stop_clicked)
        self.stop_button.setGeometry(QtCore.QRect(363, 430, 97, 48))
        self.stop_button.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.stop_button.setStyleSheet("#start_button​ {\n"
                                       "background-color: transparent;\n"
                                       "border-image: url(:../gui/img/stop.png);\n"
                                       "background: none;\n"
                                       "border: none;\n"
                                       "background-repeat: none;\n"
                                       "}\n"
                                       "")
        self.stop_button.setObjectName("stop_button")
        self.background.raise_()
        self.logo.raise_()
        self.logo_text.raise_()
        self.speaker.raise_()
        self.start_button.raise_()
        self.speaker_button.raise_()
        self.stop_button.raise_()
        MainWindow.setCentralWidget(self.centralwidget)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)
        MainWindow.setWindowIcon(QIcon('../gui/img/icon.png'))

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "CrewHelp Menu"))
        self.start_button.setText(_translate("MainWindow", "Start"))
        self.speaker_button.setText(_translate("MainWindow", "Speaker"))
        self.stop_button.setText(_translate("MainWindow", "Stop"))

    def start_clicked(self):
        print('start clicked')
        self.start_is_clicked.emit()

    def stop_clicked(self):
        print('stop clicked')
        self.stop_is_clicked.emit()

    def speaker_clicked(self):
        print('speaker clicked')
        self.speaker_is_clicked = True


def display():
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())



if __name__ == "__main__":
    import sys

    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
